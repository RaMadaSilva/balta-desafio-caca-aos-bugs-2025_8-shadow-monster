name: CI/CD Render - .NET Docker

# Aciona o workflow em todo push para a branch 'main' e permite execução manual
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # ===========================================
  # 1. Integração Contínua (CI)
  # ===========================================
  ci:
    runs-on: ubuntu-latest
    
    # O output do status é usado para garantir que o deploy só rode se o CI for sucesso.
    outputs:
      status: ${{ job.status }}
      
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore Dependencies
        # Restaura as dependências para todos os projetos
        run: dotnet restore
        
      - name: Run Tests (Exemplo)
        # Adapte este comando para executar seus testes, se houver
        run: echo "Seus comandos de teste vão aqui, ex: dotnet test --configuration Release"
        
      # Nota: A build da imagem Docker será feita pelo Render. Este job apenas valida o código.
      
  # ===========================================
  # 2. Deploy Contínuo (CD) no Render
  # ===========================================
  cd:
    # Este job precisa que o job 'ci' tenha terminado
    needs: ci
    # Só executa se o job de CI for sucesso
    if: needs.ci.outputs.status == 'success'
    runs-on: ubuntu-latest
    
    steps:
      - name: Disparar Novo Deploy no Render via API
        # Este comando HTTP POST força o Render a puxar e reconstruir o último commit
        # Requer que você tenha configurado RENDER_SERVICE_ID e RENDER_API_KEY como Segredos no GitHub.
        run: |
          echo "Disparando deploy para o Render usando a API..."
          curl --request POST \
          --url 'https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys' \
          --header 'accept: application/json' \
          --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
          --header 'content-type: application/json' \
          --data '{}'
          
          echo "Deploy do Render acionado com sucesso!"